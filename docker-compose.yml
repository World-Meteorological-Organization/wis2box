services:
  web-proxy:
    container_name: nginx
    image: nginx:alpine
    restart: always
    env_file:
      - wis2box.env
    depends_on:
      - wis2box-ui
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template

  wis2box-ui:
    container_name: wis2box-ui
    image: ghcr.io/wmo-im/wis2box-ui:latest
    restart: always
    env_file:
      - wis2box.env
    depends_on:
      - wis2box-api

#  wis2box-ui-admin:
#    container_name: wis2box-ui-admin
#    image: ghcr.io/wmo-im/wis2box-ui-admin:latest
#    restart: always
#    env_file:
#      - wis2box.env
#    depends_on:
#      - wis2box-api

  wis2box-webapp:
    container_name: wis2box-webapp
    image: ghcr.io/wmo-im/wis2box-webapp:latest
    env_file:
      - wis2box.env

  wis2box-api:
    container_name: wis2box-api
    image: ghcr.io/wmo-im/wis2box-api:1.0b6
    restart: always
    env_file:
      - wis2box.env
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - api-config:/data/wis2box/config/pygeoapi/:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/oapi/admin/resources"]
      interval: 5s
      retries: 100

  minio:
    container_name: wis2box-minio
    image: minio/minio:RELEASE.2022-12-02T19-19-22Z.fips
    mem_limit: 512m
    memswap_limit: 512m
    restart: always
    env_file:
      - wis2box.env
    command: server --console-address ":9001" /data
    # in a production-setup minio needs to be
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 1s
      retries: 3
    depends_on:
      mosquitto:
        condition: service_started

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    restart: always
    environment:
      - discovery.type=single-node
      - discovery.seed_hosts=[]
      - node.name=elasticsearch-01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=es-wis2box
      - xpack.security.enabled=false
    mem_limit: 1.5g
    memswap_limit: 1.5g
    volumes:
      - es-data:/usr/share/elasticsearch/data:rw
    # ulimits:
    #   nofile:
    #     soft: 524288
    #     hard: 524288
    #   memlock:
    #     soft: -1
    #     hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 5s
      retries: 100

  mosquitto:
    container_name: mosquitto
    #image: ghcr.io/wmo-im/wis2box-broker:1.0.beta1
    restart: always
    build:
      context: ./wis2box-broker
    env_file:
      - wis2box.env

  wis2box-management:
    container_name: wis2box-management
    mem_limit: 1g
    memswap_limit: 1g
    restart: always
    #image: ghcr.io/wmo-im/wis2box-management:1.0.beta1
    build:
      context: ./wis2box-management
    #user: wis2box:wis2box
    env_file:
      - wis2box.env
    volumes:
      - ${WIS2BOX_HOST_DATADIR}:/data/wis2box:rw
    depends_on:
      minio:
        condition: service_healthy
      mosquitto:
        condition: service_started
      wis2box-api:
        condition: service_healthy
    command: ["wis2box", "pubsub" , "subscribe"]

  wis2box-auth:
    container_name: wis2box-auth
    # WIP: disabled GHCR image and using locally updated branch instead
    # image: ghcr.io/wmo-im/wis2box-auth:latest
    build: 
      context: ../wis2box-auth
    restart: always
    env_file:
      - wis2box.env
    volumes:
      - auth-data:/data/wis2box:rw
    # WIP: temporarily disabled dependencies for quicker debugging
    # depends_on:
    #   - wis2box-management

  postgres:
    container_name: postgres
    image: postgres:13
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    env_file:
      - wis2box.env

  keycloak:
    container_name: keycloak
    command: start --optimized --hostname-strict=false --hostname-strict-https=false
    build: keycloak
    env_file:
      - wis2box.env
    volumes:
      - ./keycloak/conf/keycloak-insecure.json:/opt/keycloak/data/import/keycloak-conf.json
    depends_on:
      - postgres

volumes:
  es-data:
  minio-data:
  auth-data:
  api-config:
  postgres-db-volume:
  keycloak-data-volume:
