name: test docker deployment ‚öôÔ∏è

on: [ push, pull_request ]

jobs:
  main:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      FOO: bar

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      name: Setup Python 3.8
      with:
        python-version: 3.8
    - name: Install requirements üì¶
      run: |
        pip3 install -r requirements-dev.txt
        python3 setup.py install
    - name: wis2node configuration
      run: |
        cp tests/test.env dev.env
        echo dev.env
        python3 wis2node-ctl.py config
    - name: build wis2node ‚öôÔ∏è
      run: |
        python3 wis2node-ctl.py build
        python3 wis2node-ctl.py start
        python3 wis2node-ctl.py status
    - name: generate wis2node collection
      run: |
        docker exec `docker ps -q --filter ancestor=wis2node_wis2node` sh -c " \
          wis2node environment create \
          && wis2node environment show \
          && wis2node data setup --topic-hierarchy observations-surface-land.mw.FWCL.landFixed \
          && wis2node data info --topic-hierarchy observations-surface-land.mw.FWCL.landFixed \
          && wis2node metadata station cache /data/wis2node/data/metadata/station/station_list.csv \
          && wis2node metadata station generate-collection \
          && wis2node metadata discovery publish /data/wis2node/data/metadata/discovery/surface-weather-observations.yml \
          && wis2node data ingest -th observations-surface-land.mw.FWCL.landFixed -p /data/wis2node/data/observations/0-454-2-AWSNAMITAMBO-20210707.csv"
    - name: setup test data ‚öôÔ∏è
      env:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: password
        POSTGRES_DB: test
      run: |
        echo "Setting up test data"
        cd tests
        python3 load_obs_data.py data/observations/
        docker run --rm \
          --net wis2node_default \
          -v `pwd`:/home \
          osgeo/gdal:alpine-small-latest \
            ogr2ogr \
              -lco INDEX_NAME=observations \
              -lco GEOM_MAPPING_TYPE=GEO_POINT \
              -f "ElasticSearch" http://elasticsearch:9200 \
              /home/observations.csv \
              -oo X_POSSIBLE_NAMES=X \
              -oo Y_POSSIBLE_NAMES=Y \
              -oo Z_POSSIBLE_NAMES=Z \
              -a_srs "http://spatialreference.org/ref/epsg/4326/"
    - name: run wis2node
      run: |
        python3 wis2node-ctl.py restart
        sleep 10
        python3 wis2node-ctl.py status -a
    - name: run unit tests ‚öôÔ∏è
      run: |
        pytest tests/unit
    - name: run integration tests ‚öôÔ∏è
      run: |
        pytest tests/integration
    - name: run flake8 ‚öôÔ∏è
      run: |
        find . -type f -name "*.py" | xargs flake8
