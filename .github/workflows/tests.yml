name: tests ‚öôÔ∏è

on: [ push, pull_request ]

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    env:
      FOO: bar

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      name: Setup Python ${{ matrix.python-version }}
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install requirements üì¶
      run: |
        pip3 install -r requirements.txt
        pip3 install -r requirements-dev.txt
        python3 setup.py install
    - name: setup test data ‚öôÔ∏è PostgreSQL/PostGIS üì¶
      env:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: password
        POSTGRES_DB: test
      run: |
        echo "Setting up test data"
        cd tests
        python3 load_obs_data.py data/observations/
        docker compose up -d
    - name: Build and Initialize Wis2node
      run: |
        make up
    - name: setup wis2node ‚öôÔ∏è
      run: |
        docker ps
        make login
        wis2node metadata station generate-collection
        wis2node data observations process \
          --discovery-metadata tests/data/metadata/discovery/surface-weather-observations.yml \
          --station-metadata tests/data/metadata/station/0-454-2-AWSNAMITAMBO.json \
          --mappings tests/data/config/malawi_synop_bufr.json \
          --geojson_mappings tests/data/config/malawi_synop_json.geojson tests/data/observations/Namitambo_SYNOP.csv
        exit
    - name: setup wis2node
      run: |
        docker exec -it `docker ps -q --filter ancestor=wis2node_wis2node` /bin/bash
    - name: Run wis2node
      run: |
        make up
        docker ps
    - name: run unit tests ‚öôÔ∏è
      run: |
        pytest tests/unit
    - name: run integration tests ‚öôÔ∏è
      run: |
        pytest tests/integration
    - name: run flake8 ‚öôÔ∏è
      run: |
        find . -type f -name "*.py" | xargs flake8
