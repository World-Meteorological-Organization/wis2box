version: "3"

services:
  web-proxy:
    container_name: nginx
    image: nginx:alpine
    restart: always
    environment:
      - METPX_SR3_PATH_PUBLIC=/data/wis2node/data/public
    depends_on:
      - pygeoapi
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${WIS2NODE_DATADIR}/data/public:/data/wis2node/data/public:ro

  wis2node-ui:
    container_name: wis2node-ui
    image: webbben/wis2node-ui

  pygeoapi:
    container_name: pygeoapi
    image: geopython/pygeoapi:latest
    environment:
      - SCRIPT_NAME=/pygeoapi
      - PYGEOAPI_SERVER_URL=${WIS2NODE_OGC_API_URL}
      - WIS2NODE_DATADIR=/data/wis2node/data
    volumes:
      - ./pygeoapi/pygeoapi-config.yml:/pygeoapi/local.config.yml:ro

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch-01
      - discovery.seed_hosts=elasticsearch-01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
    ulimits:
      nofile:
        soft: 524288
        hard: 524288
      memlock:
        soft: -1
        hard: -1

  mosquitto:
    image: eclipse-mosquitto
    environment:
      - METPX_SR3_BROKER_USERNAME=${METPX_SR3_BROKER_USERNAME}
      - METPX_SR3_BROKER_PASSWORD=${METPX_SR3_BROKER_PASSWORD}
    volumes:
      - ${WIS2NODE_DATADIR}/mosquitto:/mosquitto/:rw
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/entrypoint.sh:/entrypoint.sh
    entrypoint: /bin/sh /entrypoint.sh

  data-consumer:
    container_name: data-consumer
    image: webbben/sarracenia
    environment:
      - METPX_SR3_HOST=${METPX_SR3_HOST}
      - METPX_SR3_BROKER_USERNAME=${METPX_SR3_BROKER_USERNAME}
      - METPX_SR3_BROKER_PASSWORD=${METPX_SR3_BROKER_PASSWORD}
      - METPX_SR3_EXCHANGE=${METPX_SR3_EXCHANGE}
      - METPX_SR3_PATH_INCOMING=/data/wis2node/data/incoming
      - METPX_SR3_PATH_PUBLIC=/data/wis2node/data/public
      - METPX_SR3_BASEURL=${WIS2NODE_OGC_URL}
      - METPX_SR3_LOGLEVEL=DEBUG
    volumes:
      - ./data-consumer/config:/root/.config/sr3:ro
      - ${WIS2NODE_DATADIR}/cache/sarra:/root/.cache:rw
      - ${WIS2NODE_DATADIR}:/data/wis2node:rw
    depends_on:
      - mosquitto
    command: sh -c "sr3 start && sleep infinity"

  wis2node:
    container_name: wis2node
    build: ..
    environment:
      - METPX_SR3_HOST=${METPX_SR3_HOST}
      - METPX_SR3_BROKER_USERNAME=${METPX_SR3_BROKER_USERNAME}
      - METPX_SR3_BROKER_PASSWORD=${METPX_SR3_BROKER_PASSWORD}
      - METPX_SR3_EXCHANGE=${METPX_SR3_EXCHANGE}
      - METPX_SR3_PATH_INCOMING=/data/wis2node/data/incoming
      - METPX_SR3_PATH_PUBLIC=/data/wis2node/data/public
      - METPX_SR3_BASEURL=${WIS2NODE_OGC_URL}
      - METPX_SR3_LOGLEVEL=DEBUG

      - WIS2NODE_DATADIR=/data/wis2node/data
      - WIS2NODE_DATADIR_INCOMING=/data/wis2node/data/incoming
      - WIS2NODE_DATADIR_OUTGOING=/data/wis2node/data/outgoing
      - WIS2NODE_DATADIR_PUBLIC=/data/wis2node/data/public
      - WIS2NODE_CATALOGUE_BACKEND=/data/wis2node/data/metadata/discovery/records.tinydb
      - WIS2NODE_OSCAR_API_TOKEN=${WIS2NODE_OSCAR_API_TOKEN}
      - WIS2NODE_URL=${WIS2NODE_OGC_URL}
      - WIS2NODE_OGC_API_URL=${WIS2NODE_OGC_API_URL}
    volumes:
      - ./wis2node/config:/home/wis2node/.config/sr3:ro
      - ${WIS2NODE_DATADIR}/cache/wis2node:/home/wis2node/.cache:rw
      - ${WIS2NODE_DATADIR}:/data/wis2node:rw
    depends_on:
      - mosquitto
    command: sh -c "sr3 start && sleep infinity"
