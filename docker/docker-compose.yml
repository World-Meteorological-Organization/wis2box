version: "3"

services:
  web-proxy:
    container_name: nginx
    image: nginx:alpine
    restart: always
    environment:
      - METPX_SR3_PATH_PUBLIC=/data/wis2node/data/public
    depends_on:
      - wis2node-ui
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - wis2node-data:/data/wis2node:ro

  wis2node-ui:
    container_name: wis2node-ui
    image: ghcr.io/wmo-im/wis2node-ui:latest
    depends_on:
      - pygeoapi

  pygeoapi:
    container_name: pygeoapi
    #image: geopython/pygeoapi:latest
    build:
      context: ./pygeoapi
    environment:
      - SCRIPT_NAME=/pygeoapi
      - WIS2NODE_API_URL=${WIS2NODE_API_URL}
      - WIS2NODE_API_BACKEND_HOST=${WIS2NODE_API_BACKEND_HOST}
      - WIS2NODE_API_BACKEND_PORT=${WIS2NODE_API_BACKEND_PORT}
      - WIS2NODE_DATADIR=/data/wis2node
    depends_on:
      - elasticsearch
    volumes:
      - wis2node-data:/data/wis2node:rw
      - ./pygeoapi/pygeoapi-config.yml:/pygeoapi/local.config.yml:ro

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch-01
      - discovery.seed_hosts=elasticsearch-01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      # - xpack.security.enabled=true  # TODO: setup credentials
    volumes:
      - es-data:/usr/share/elasticsearch/data:rw
    # ulimits:
    #   nofile:
    #     soft: 524288
    #     hard: 524288
    #   memlock:
    #     soft: -1
    #     hard: -1
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9200"]
      interval: 5s
      retries: 10

  mosquitto:
    container_name: mosquitto
    # image: eclipse-mosquitto
    build:
      context: ./mosquitto
    environment:
      - METPX_SR3_BROKER_USERNAME=${METPX_SR3_BROKER_USERNAME}
      - METPX_SR3_BROKER_PASSWORD=${METPX_SR3_BROKER_PASSWORD}
    volumes:
      - wis2node-data:/data/wis2node:rw

  data-consumer:
    container_name: data-consumer
    # image: ghcr.io/metpx/sarracenia:latest
    build:
      context: ./data-consumer
    #user: sarra:sarra
    environment:
      - METPX_SR3_HOST=${METPX_SR3_HOST}
      - METPX_SR3_BROKER_USERNAME=${METPX_SR3_BROKER_USERNAME}
      - METPX_SR3_BROKER_PASSWORD=${METPX_SR3_BROKER_PASSWORD}
      - METPX_SR3_EXCHANGE=${METPX_SR3_EXCHANGE}
      - METPX_SR3_PATH_INCOMING=/data/wis2node/data/incoming
      - METPX_SR3_PATH_PUBLIC=/data/wis2node/data/public
      - WIS2NODE_URL=${WIS2NODE_URL}
      - METPX_SR3_LOGLEVEL=DEBUG
    volumes:
      - wis2node-data:/data/wis2node:rw
      - ${WIS2NODE_DATADIR_INCOMING}:/data/wis2node/data/incoming:rw
    depends_on:
      - mosquitto

  wis2node:
    container_name: wis2node
    build: 
      context: ..
      args:
        WIS2NODE_PIP3_EXTRA_PACKAGES: ${WIS2NODE_PIP3_EXTRA_PACKAGES}
    #user: wis2node:wis2node
    environment:
      - METPX_SR3_HOST=${METPX_SR3_HOST}
      - METPX_SR3_BROKER_USERNAME=${METPX_SR3_BROKER_USERNAME}
      - METPX_SR3_BROKER_PASSWORD=${METPX_SR3_BROKER_PASSWORD}
      - METPX_SR3_EXCHANGE=${METPX_SR3_EXCHANGE}
      - METPX_SR3_PATH_INCOMING=/data/wis2node/data/incoming
      - METPX_SR3_PATH_PUBLIC=/data/wis2node/data/public
      - METPX_SR3_BASEURL=${WIS2NODE_URL}
      - METPX_SR3_LOGLEVEL=DEBUG
      #- WIS2NODE_DATA_MAPPINGS=/data/wis2node/data-mappings.yml
      - WIS2NODE_API_BACKEND_HOST=${WIS2NODE_API_BACKEND_HOST}
      - WIS2NODE_API_BACKEND_PORT=${WIS2NODE_API_BACKEND_PORT}
      - WIS2NODE_API_BACKEND_TYPE=${WIS2NODE_API_BACKEND_TYPE}
      - WIS2NODE_DATA_RETENTION_DAYS=${WIS2NODE_DATA_RETENTION_DAYS}
      - WIS2NODE_DATADIR=/data/wis2node
      - WIS2NODE_DATADIR_CONFIG=/data/wis2node/data/config
      - WIS2NODE_DATADIR_INCOMING=/data/wis2node/data/incoming
      - WIS2NODE_DATADIR_PUBLIC=/data/wis2node/data/public
      - WIS2NODE_OSCAR_API_TOKEN=${WIS2NODE_OSCAR_API_TOKEN}
      - WIS2NODE_API_TYPE=${WIS2NODE_API_TYPE}
      - WIS2NODE_API_URL=${WIS2NODE_API_URL}
      - WIS2NODE_MQP_URL=${WIS2NODE_MQP_URL}
      - WIS2NODE_URL=${WIS2NODE_URL}
      - WIS2NODE_API_CONFIG=/data/wis2node/pygeoapi-config.yml
      - WIS2NODE_LOGLEVEL=${WIS2NODE_LOGGING_LOGLEVEL}
      - WIS2NODE_LOGFILE=${WIS2NODE_LOGGING_LOGFILE}
    volumes:
      - wis2node-data:/data/wis2node:rw
      - ./wis2node/config:/root/.config/sr3:ro
      - ./wis2node/wis2node.cron:/etc/cron.d/wis2node:ro
      - ./pygeoapi/pygeoapi-config.yml:/data/wis2node/pygeoapi-config.yml:rw
      - ${WIS2NODE_DATADIR}/data:/data/wis2node/data:rw
      - ${WIS2NODE_DATADIR_CONFIG}:/data/wis2node/data/config:rw
      - ${WIS2NODE_DATADIR_INCOMING}:/data/wis2node/data/incoming:rw
      - ${WIS2NODE_DATADIR_PUBLIC}:/data/wis2node/data/public:rw
    depends_on:
      - mosquitto
volumes:
  wis2node-data:
  es-data:
