services:
  # promtail for scraping logs
  promtail:
    image: grafana/promtail:2.4.2
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/config.yml
  # The Loki database for storing logs.
  loki:
    container_name: loki
    image: grafana/loki:2.4.2
    volumes:
      - loki-data:/loki
  # cadvisor to export metrics on our containers
  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always
  # prometheus to store metrics
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  # Grafana, graphical monitoring dashboards for wis2box using data from loki and prometheus
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_HIDE_VERSION=true
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/home.json
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_USERS_VIEWERS_CAN_EDIT=true
      - GF_UNIFIED_ALERTING_ENABLED=false
      - GF_ALERTING_ENABLED=false
    ports:
      - 3000:3000

  web-proxy:
    container_name: nginx
    image: nginx:alpine
    restart: always
    env_file:
      - default.env
      - ../dev.env
    depends_on:
      - wis2box-ui
    volumes:
      - ${WIS2BOX_HOST_DATADIR}/data/public:/data/wis2box/data/public:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  wis2box-ui:
    container_name: wis2box-ui
    image: ghcr.io/wmo-im/wis2box-ui:latest
    depends_on:
      - pygeoapi

  pygeoapi:
    container_name: pygeoapi
    build:
      context: ./pygeoapi
    env_file:
      - default.env
      - ../dev.env
    environment:
      - SCRIPT_NAME=/pygeoapi
    depends_on:
      - elasticsearch
    volumes:
      - ${WIS2BOX_HOST_DATADIR}/data:/data/wis2box/data:ro
      - ./pygeoapi/pygeoapi-config.yml:/pygeoapi/local.config.yml:ro

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch-01
      - discovery.seed_hosts=elasticsearch-01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      # - xpack.security.enabled=true  # TODO: setup credentials
    volumes:
      - es-data:/usr/share/elasticsearch/data:rw
    # ulimits:
    #   nofile:
    #     soft: 524288
    #     hard: 524288
    #   memlock:
    #     soft: -1
    #     hard: -1
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9200"]
      interval: 5s
      retries: 10

  mosquitto:
    container_name: mosquitto
    # image: eclipse-mosquitto
    build:
      context: ./mosquitto
    env_file:
      - default.env
      - ../dev.env
    volumes:
      - ${WIS2BOX_HOST_DATADIR}/data:/data/wis2box/data:rw
    depends_on:
      - loki

  data-consumer:
    container_name: data-consumer
    build:
      context: ./data-consumer
    env_file:
      - default.env
      - ../dev.env
    volumes:
      - ${WIS2BOX_HOST_DATADIR}/data:/data/wis2box/data:rw
    depends_on:
      - mosquitto

  mqp-publisher:
    container_name: mqp-publisher
    build:
      context: ./mqp-publisher
    env_file:
      - default.env
      - ../dev.env
    volumes:
      - ${WIS2BOX_HOST_DATADIR}/data:/data/wis2box/data:rw
    depends_on:
      - mosquitto

  ca-republisher:
    container_name: ca-republisher
    build:
      context: ./ca-republisher
    env_file:
      - default.env
      - ../dev.env
    volumes:
      - ${WIS2BOX_HOST_DATADIR}/data:/data/wis2box/data:rw
    depends_on:
      - mosquitto

  de-republisher:
    container_name: de-republisher
    build:
      context: ./de-republisher
    env_file:
      - default.env
      - ../dev.env
    volumes:
      - ${WIS2BOX_HOST_DATADIR}/data:/data/wis2box/data:rw
    depends_on:
      - mosquitto

  wis2box:
    container_name: wis2box
    build:
      context: ..
      # args:
      #   WIS2BOX_PIP3_EXTRA_PACKAGES: ${WIS2BOX_PIP3_EXTRA_PACKAGES}
    #user: wis2box:wis2box
    env_file:
      - default.env
      - ../dev.env
    volumes:
      - ${WIS2BOX_HOST_DATADIR}:/data/wis2box:rw
      - ./wis2box/wis2box.cron:/etc/cron.d/wis2box:ro
      - ./pygeoapi/pygeoapi-config.yml:/data/wis2box/pygeoapi-config.yml:rw
    depends_on:
      - mosquitto

volumes:
  es-data:
  loki-data:
  prometheus-data:


